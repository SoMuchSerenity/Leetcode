Solution 1:
### The problem is I treat x as a number and do operations on it numerically, which is harder and more memory-demanding than the second solution, where I convert x into a string

class Solution:
    def reverse(self, x: int) -> int:
        
        negative = False 
        if x<0:
            x = -x
            negative = True 
            
        if x ==0:
            return 0
   
        digit = []
        while x!= 0:
            resi = x %10
            x -= resi
            digit.append(resi)
            if x==0:
                break
            x //= 10
            
        while digit[0] == 0:
            digit[0:1] = []
            
        digit = digit[::-1]
        
        new_number = 0
        for i in range(len(digit)):
            new_number += digit[i]*10**i
            
        if negative == True:
            new_number = -new_number
            
        if new_number > 2**31 -1 or new_number < -2**31:
            return 0
            
        return new_number
        
        
        
Solution 2:

class Solution:
    def reverse(self, x: int) -> int:
        negative = False
        if x<0:
            x = -x
            negative = True
            
        x = str(x)
        x =x[::-1]
        num = int(x)
        if negative == True:
            num = -num
            
        if num> 2**31 - 1 or num < -2**31:
            return 0
            
        return num
            
